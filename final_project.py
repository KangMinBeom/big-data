# -*- coding: utf-8 -*-
"""final project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_bFy0lDlTKYpsHHDKJp6YYLFUaut_8Ir
"""

# 단계 1: 폰트 설치
import matplotlib.font_manager as fm
import matplotlib.pyplot as plt

!apt-get -qq -y install fonts-nanum > /dev/null
#fontpath = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf'

#font = fm.FontProperties(fname=fontpath, size=9)

#fm._rebuild()



fe = fm.FontEntry(
    fname=r'/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf', 
    name='NanumGothic')                        
fm.fontManager.ttflist.insert(0, fe)              
plt.rcParams.update({'font.size': 18, 'font.family': 'NanumGothic'}) 

# 단계 2: 런타임 재시작
import os
os.kill(os.getpid(), 9)

# 단계 3: 한글 폰트 설정
import matplotlib.pyplot as plt
import matplotlib as mpl
import matplotlib.font_manager as fm

# 마이너스 표시 문제
mpl.rcParams['axes.unicode_minus'] = False

# 한글 폰트 설정
fe = fm.FontEntry(
    fname=r'/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf', 
    name='NanumGothic')                       
fm.fontManager.ttflist.insert(0, fe)              
plt.rcParams.update({'font.size': 18, 'font.family': 'NanumGothic'})

import pandas as pd
import matplotlib.ticker as ticker
from matplotlib.ticker import MultipleLocator
df = pd.read_excel('/content/연령별 출국.xlsx')

df.drop(index=0,inplace=True)
df.drop(index=9,inplace=True)
df.drop(index=10,inplace=True)

# 그래프 사이즈 설정
plt.figure(figsize=(12, 6))

bar_width = 0.25

x = range(len(df))

plt.bar([p - bar_width for p in x], df['2022년'], width=bar_width, label='2022년')
plt.bar(x, df['2023년'], width=bar_width, label='2023년')
plt.bar([p + bar_width for p in x], df['2024년'], width=bar_width, label='2024년')

def thousands_formatter(x, pos):
    return f'{int(x / 10000):,}만'  

plt.gca().yaxis.set_major_formatter(ticker.FuncFormatter(thousands_formatter))

plt.gca().yaxis.set_major_locator(MultipleLocator(500000))

plt.xlabel('연령대')
plt.ylabel('인원수')
plt.title('연령대별 연도별 인원 분포')
plt.xticks(x, df['연령별'])
plt.legend()

# 그래프 출력
plt.show()

import pandas as pd
import matplotlib.ticker as ticker
from matplotlib.ticker import MultipleLocator
import seaborn as sns
import matplotlib.pyplot as plt

# 데이터 불러오기
df = pd.read_excel('/content/성별 출국.xlsx')

df.drop(index=[0, 3, 4], inplace=True)
df.drop(df.columns[4], axis=1, inplace=True)


# 데이터를 연도별 인구수로 정리
df_melted = df.melt(id_vars='성별', var_name='연도', value_name='인구수')

def thousands_formatter(x, pos):
    return f'{int(x / 10000):,}만' 

sns.lineplot(data=df_melted, x='연도', y='인구수', hue='성별', marker='o')

plt.gca().yaxis.set_major_formatter(ticker.FuncFormatter(thousands_formatter))
plt.gca().yaxis.set_major_locator(MultipleLocator(1000000))

# 그래프 제목 및 축 레이블 설정
plt.title('성별 연도별 인구수 변화')
plt.xlabel('연도')
plt.ylabel('방문자 수')
plt.xticks(rotation=45)
plt.legend(title='성별')
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib.font_manager as fm

# 한글 폰트 설정 (NanumGothic 설치 필요)
!apt-get -qq install -y fonts-nanum
plt.rc('font', family='NanumGothic')

# 데이터 불러오기
df = pd.read_csv('/content/연도,월별 출국.csv', encoding='euc-kr')

# 2023년, 2024년 데이터 필터링
df_2023 = df[df['년'] == 2023]
df_2024 = df[df['년'] == 2024]

# 히트맵 - 연도별 도착지의 출국자 수 (컬러바 제거)
df_pivot = df.pivot_table(values='내국인출국자', index='도착지', columns='년', aggfunc='sum').fillna(0)
plt.figure(figsize=(10, 12))
sns.heatmap(df_pivot, annot=True, fmt=".0f", cmap="YlGnBu", cbar=False)
plt.title('도착지별 연도에 따른 내국인 출국자 수')
plt.xlabel('년')
plt.ylabel('도착지')
plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import matplotlib.font_manager as fm
from matplotlib import font_manager


font_path = '/usr/share/fonts/truetype/nanum/NanumGothic.ttf' 
font = font_manager.FontProperties(fname=font_path).get_name()
plt.rc('font', family=font)

df = pd.read_csv('/content/지연 현황.csv', encoding="euc-kr")
print(df)
airports = df["공항"]
delay_causes = ["기상 원인 지연(건)", "비행기 연결 원인 지연(건)", "비행기 정비 원인 지연(건)", "기타(건)"]

plt.figure(figsize=(10, 6))
plt.bar(airports, df["지연율(퍼센트)"], color="skyblue")
plt.title("공항별 지연율 (퍼센트)")
plt.xlabel("공항")
plt.ylabel("지연율 (%)")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

df["공항_노선"] = df["공항"] + " (" + df["노선"] + ")"

airports = df["공항_노선"]

df[delay_causes].plot(kind="bar", stacked=True, figsize=(10, 6), colormap="viridis")
plt.title("공항별 지연 원인", fontsize=14)
plt.xlabel("공항 (노선)", fontsize=12)
plt.ylabel("지연 건수", fontsize=12)
plt.xticks(range(len(airports)), airports, rotation=45, fontsize=10)
plt.yticks(fontsize=10)
plt.legend(title="지연 원인", fontsize=10, title_fontsize=12)
plt.tight_layout()
plt.show()